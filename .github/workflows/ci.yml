name: CI workflow
on:
  push:
    paths:
      - '.github/workflows/ci.yml'
  workflow_dispatch:
  schedule:
    - cron:  '0 6 * * *'

jobs:
  build-arch-gcc-oiio:
    secrets: inherit
    uses: ./.github/workflows/build-linux.yml
    with:
      docker-image: oidn-build:arch
      cmd: |
        mkdir build
        cd build
        cmake -D OIDN_APPS_OPENIMAGEIO=ON ..
        make -j8 VERBOSE=1

  build-centos7-icc:
    secrets: inherit
    uses: ./.github/workflows/build-linux.yml
    with:
      docker-image: oidn-build:centos7
      artifact-name: build-centos7-icc_artifact
      cmd: scripts/build.py install --compiler icc -D OIDN_WARN_AS_ERRORS=ON

  build-ubuntu1804-gcc:
    secrets: inherit
    uses: ./.github/workflows/build-linux.yml
    with:
      docker-image: oidn-build:ubuntu18.04
      artifact-name: build-ubuntu1804-gcc_artifact
      cmd: scripts/build.py install --compiler gcc -D OIDN_WARN_AS_ERRORS=ON

  build-ubuntu1804-gcc-debug:
    secrets: inherit
    uses: ./.github/workflows/build-linux.yml
    with:
      docker-image: oidn-build:ubuntu18.04
      artifact-name: build-ubuntu1804-gcc-debug_artifact
      cmd: scripts/build.py install --compiler gcc --config Debug -D OIDN_WARN_AS_ERRORS=ON

  build-ubuntu1804-clang:
    secrets: inherit
    uses: ./.github/workflows/build-linux.yml
    with:
      docker-image: oidn-build:ubuntu18.04
      cmd: scripts/build.py --compiler clang

  build-ubuntu1804-gcc-static:
    secrets: inherit
    uses: ./.github/workflows/build-linux.yml
    with:
      docker-image: oidn-build:ubuntu18.04
      cmd: scripts/build.py --compiler gcc -D OIDN_STATIC_LIB=ON

  build-ubuntu1804-gcc-namespace:
    secrets: inherit
    uses: ./.github/workflows/build-linux.yml
    with:
      docker-image: oidn-build:ubuntu18.04
      cmd: scripts/build.py --compiler gcc -D OIDN_API_NAMESPACE=myoidn

  build-ubuntu1804-gcc-tbb2007:
    secrets: inherit
    uses: ./.github/workflows/build-linux.yml
    with:
      docker-image: oidn-build:ubuntu18.04
      cmd: |
        mkdir build
        cd build
        cmake -D OIDN_WARN_AS_ERRORS=ON ..
        make -j8 VERBOSE=1

  build-ubuntu2004-gcc-oiio:
    secrets: inherit
    uses: ./.github/workflows/build-linux.yml
    with:
      docker-image: oidn-build:ubuntu20.04
      cmd: |
        mkdir build
        cd build
        cmake -D OIDN_APPS_OPENIMAGEIO=ON -D OIDN_WARN_AS_ERRORS=ON ..
        make -j8 VERBOSE=1

  build-ubuntu2004-gcc-minimal:
    secrets: inherit
    uses: ./.github/workflows/build-linux.yml
    with:
      docker-image: oidn-build:ubuntu20.04
      cmd: scripts/build.py --compiler gcc -D OIDN_FILTER_RT=OFF -D OIDN_FILTER_RTLIGHTMAP=OFF

  test-centos7-icc-avx2:
    needs: build-centos7-icc
    secrets: inherit
    uses: ./.github/workflows/test-linux.yml
    with:
      runs-on: '[ "Linux", "docker", "avx2" ]'
      docker-image: oidn-build:centos7
      artifact-name: build-centos7-icc_artifact
      cmd: scripts/test.py

  test-centos7-icc-avx512:
    needs: build-centos7-icc
    secrets: inherit
    uses: ./.github/workflows/test-linux.yml
    with:
      runs-on: '[ "Linux", "docker", "avx512" ]'
      docker-image: oidn-build:centos7
      artifact-name: build-centos7-icc_artifact
      cmd: scripts/test.py

  test-centos7-icc-sse4:
    needs: build-centos7-icc
    secrets: inherit
    uses: ./.github/workflows/test-linux.yml
    with:
      runs-on: '[ "Linux", "docker", "build" ]'
      docker-image: oidn-build:centos7
      artifact-name: build-centos7-icc_artifact
      cmd: scripts/test.py --arch pnr

  test-ubuntu1804-gcc-avx2:
    needs: build-ubuntu1804-gcc
    secrets: inherit
    uses: ./.github/workflows/test-linux.yml
    with:
      runs-on: '[ "Linux", "docker", "avx2" ]'
      docker-image: oidn-build:ubuntu18.04
      artifact-name: build-ubuntu1804-gcc_artifact
      cmd: scripts/test.py

  test-ubuntu1804-gcc-avx512:
    needs: build-ubuntu1804-gcc
    secrets: inherit
    uses: ./.github/workflows/test-linux.yml
    with:
      runs-on: '[ "Linux", "docker", "avx512" ]'
      docker-image: oidn-build:ubuntu18.04
      artifact-name: build-ubuntu1804-gcc_artifact
      cmd: scripts/test.py

  test-ubuntu1804-gcc-sse4:
    needs: build-ubuntu1804-gcc
    secrets: inherit
    uses: ./.github/workflows/test-linux.yml
    with:
      runs-on: '[ "Linux", "docker", "build" ]'
      docker-image: oidn-build:ubuntu18.04
      artifact-name: build-ubuntu1804-gcc_artifact
      cmd: scripts/test.py --arch pnr

  test-ubuntu1804-gcc-debug-avx2:
    needs: build-ubuntu1804-gcc-debug
    secrets: inherit
    uses: ./.github/workflows/test-linux.yml
    with:
      runs-on: '[ "Linux", "docker", "avx2" ]'
      docker-image: oidn-build:ubuntu18.04
      artifact-name: build-ubuntu1804-gcc-debug_artifact
      cmd: scripts/test.py

  test-ubuntu1804-gcc-debug-avx512:
    needs: build-ubuntu1804-gcc-debug
    secrets: inherit
    uses: ./.github/workflows/test-linux.yml
    with:
      runs-on: '[ "Linux", "docker", "avx512" ]'
      docker-image: oidn-build:ubuntu18.04
      artifact-name: build-ubuntu1804-gcc-debug_artifact
      cmd: scripts/test.py

  build-macos-clang-arm:
    secrets: inherit
    uses: ./.github/workflows/build-macos.yml
    with:
      runs-on: '[ "macOS", "arm" ]'
      artifact-name: test-macos-clang-arm_artifact
      architecture: arm
      cmd: scripts/build.py install --compiler clang -D OIDN_WARN_AS_ERRORS=ON

  build-macos-clang-debug-arm:
    secrets: inherit
    uses: ./.github/workflows/build-macos.yml
    with:
      artifact-name: test-macos-clang-debug-arm_artifact
      runs-on: '[ "macOS", "arm" ]'
      architecture: arm
      cmd: scripts/build.py install --compiler clang --config Debug -D OIDN_WARN_AS_ERRORS=ON

  build-macos-clang-static-arm:
    secrets: inherit
    uses: ./.github/workflows/build-macos.yml
    with:
      runs-on: '[ "macOS", "arm" ]'
      architecture: arm
      cmd: scripts/build.py --compiler clang -D OIDN_STATIC_LIB=ON

  build-macos-clang-namespace-arm:
    secrets: inherit
    uses: ./.github/workflows/build-macos.yml
    with:
      runs-on: '[ "macOS", "arm" ]'
      architecture: arm
      cmd: scripts/build.py --compiler clang -D OIDN_API_NAMESPACE=myoidn  

  test-macos-clang-arm:
    needs: build-macos-clang-arm
    secrets: inherit
    uses: ./.github/workflows/test-macos.yml
    with:
      runs-on: '[ "macOS", "arm" ]'
      artifact-name: test-macos-clang-arm_artifact
      cmd: scripts/test.py
      architecture: arm

  test-macos-clang-debug-arm:
    needs: build-macos-clang-debug-arm
    secrets: inherit
    uses: ./.github/workflows/test-macos.yml
    with:
      runs-on: '[ "macOS", "arm" ]'
      artifact-name: test-macos-clang-debug-arm_artifact
      cmd: scripts/test.py
      architecture: arm

  build-macos-clang:
    secrets: inherit
    uses: ./.github/workflows/build-macos.yml
    with:
      runs-on: '[ "macOS", "build", "avx2" ]'
      artifact-name: build-macos-clang_artifact
      cmd: scripts/build.py install --compiler clang -D OIDN_WARN_AS_ERRORS=ON
      

  build-macos-clang-debug:
    secrets: inherit
    uses: ./.github/workflows/build-macos.yml
    with:
      runs-on: '[ "macOS", "build", "avx2" ]'
      cmd: scripts/build.py install --compiler clang --config Debug -D OIDN_WARN_AS_ERRORS=ON
      

  build-macos-clang-static:
    secrets: inherit
    uses: ./.github/workflows/build-macos.yml
    with:
      runs-on: '[ "macOS", "build", "avx2" ]'
      cmd: scripts/build.py --compiler clang -D OIDN_STATIC_LIB=ON
      

  build-macos-clang-namespace:
    secrets: inherit
    uses: ./.github/workflows/build-macos.yml
    with:
      runs-on: '[ "macOS", "build", "avx2" ]'
      cmd: scripts/build.py --compiler clang -D OIDN_API_NAMESPACE=myoidn
      

  build-macos-icc:
    secrets: inherit
    uses: ./.github/workflows/build-macos.yml
    with:
      runs-on: '[ "macOS", "build", "avx2" ]'
      artifact-name: build-macos-icc_artifact
      cmd: scripts/build.py install --compiler icc -D OIDN_WARN_AS_ERRORS=ON

  build-macos-icc-debug:
    secrets: inherit
    uses: ./.github/workflows/build-macos.yml
    with:
      runs-on: '[ "macOS", "build", "avx2" ]'
      cmd: scripts/build.py install --compiler icc --config Debug -D OIDN_WARN_AS_ERRORS=ON   

  test-macos-clang-avx2:
    needs: build-macos-clang
    secrets: inherit
    uses: ./.github/workflows/test-macos.yml
    with:
      runs-on: '[ "macOS", "avx2", "sign" ]'
      artifact-name: build-macos-clang_artifact
      cmd: scripts/test.py
      

  test-macos-clang-avx512:
    needs: build-macos-clang
    secrets: inherit
    uses: ./.github/workflows/test-macos.yml
    with:
      runs-on: '[ "macOS", "avx512" ]'
      artifact-name: build-macos-clang_artifact
      cmd: scripts/test.py

  test-macos-icc-avx2:
    needs: build-macos-icc
    secrets: inherit
    uses: ./.github/workflows/test-macos.yml
    with:
      runs-on: '[ "macOS", "avx2", "sign" ]'
      artifact-name: build-macos-icc_artifact
      cmd: scripts/test.py

  test-macos-icc-avx512:
    needs: build-macos-icc
    secrets: inherit
    uses: ./.github/workflows/test-macos.yml
    with:
      runs-on: '[ "macOS", "avx512" ]'
      artifact-name: build-macos-icc_artifact
      cmd: scripts/test.py
      

  build-windows-msvc15-icc:
    secrets: inherit
    uses: ./.github/workflows/build-windows.yml
    with:
      runs-on: '[ "Windows", "build", "icc19.0" ]'
      artifact-name: build-windows-msvc15-icc_artifact
      cmd: python scripts/build.py install --compiler msvc15-icc19 -D OIDN_WARN_AS_ERRORS=ON

  build-windows-msvc15:
    secrets: inherit
    uses: ./.github/workflows/build-windows.yml
    with:
      runs-on: '[ "Windows", "build" ]'
      cmd: python scripts/build.py install --compiler msvc15 -D OIDN_WARN_AS_ERRORS=ON

  build-windows-msvc15-static:
    secrets: inherit
    uses: ./.github/workflows/build-windows.yml
    with:
      runs-on: '[ "Windows", "build" ]'
      cmd: python scripts/build.py --compiler msvc15 -D OIDN_STATIC_LIB=ON
      
  build-windows-msvc15-debug:
    secrets: inherit
    uses: ./.github/workflows/build-windows.yml
    with:
      runs-on: '[ "Windows", "build" ]'
      cmd: python scripts/build.py --compiler msvc15 --config Debug

  build-windows-msvc15-namespace:
    secrets: inherit
    uses: ./.github/workflows/build-windows.yml
    with:
      runs-on: '[ "Windows", "build" ]'
      cmd: python scripts/build.py --compiler msvc15 -D OIDN_API_NAMESPACE=myoidn

  build-windows-msvc16:
    secrets: inherit
    uses: ./.github/workflows/build-windows.yml
    with:
      runs-on: '[ "Windows", "build" ]'
      artifact-name: build-windows-msvc16_artifact
      cmd: python scripts/build.py install --compiler msvc16 -D OIDN_WARN_AS_ERRORS=ON

  test-windows-msvc16-avx512:
    needs: build-windows-msvc16
    secrets: inherit
    uses: ./.github/workflows/test-windows.yml
    with:
      runs-on: '[ "Windows", "avx512", "NAS" ]'
      artifact-name: build-windows-msvc16_artifact
      cmd: python scripts/test.py
      
  test-windows-icc-avx512:
    needs: build-windows-msvc15-icc
    secrets: inherit
    uses: ./.github/workflows/test-windows.yml
    with:
      runs-on: '[ "Windows", "avx512", "NAS" ]'
      artifact-name: build-windows-msvc15-icc_artifact
      cmd: python scripts/test.py

  kw-build-scan-report:
    secrets: inherit
    uses: ./.github/workflows/build-kw-scan.yml

  snyk-scan:
    secrets: inherit
    uses: ./.github/workflows/snyk-scan.yml

  package-scan:
    secrets: inherit
    uses: ./.github/workflows/package-scan.yml

