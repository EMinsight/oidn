on:
  workflow_call:
    inputs:
      docker-image:
        required: false
        type: string
        default: oidn-build:ubuntu18.04

jobs:
  kw-build-scan-report:
    runs-on: [ Linux, docker, build ]
    container:
      image: amr-registry.caas.intel.com/renderkit/${{ inputs.docker-image }}
      options: --user root
      volumes:
        - /NAS:/NAS
    env:
      KW_PROJECT_NAME: oidn
      KW_USER: ${{ secrets.KW_USER }}
      KW_LTOKEN: ${{ secrets.KW_LTOKEN }}
      KW_PATH: /NAS/tools/kw-2019.3
      KW_SERVER_IP: vis-kw-server.an.intel.com
      KW_SERVER_PORT: 80

      STORAGE_PATH: /NAS/SDL
      CI_TOOLS_PATH: /NAS/tools/ci_tools/ci_tools-0.3.1
      SHARED_TOOLS_PATH: /NAS/tools

    defaults:
      run:
        shell: bash
    steps:
      # We need to checkout code first to get access to repo actions
      # used in next step.
      - uses: actions/checkout@v3
      # Custom action to WA submodules problem with OIDN
      - name: Checkout OIDN src code with submodules
        uses: ./.github/actions/checkout
        with:
          pat: ${{ secrets.PAT_TOKEN }}

      - name: Build
        run: |
         export CI_PROJECT_DIR=$GITHUB_WORKSPACE
         export CI_JOB_ID=$GITHUB_RUN_ID
         ./scripts/kw-build.sh

      - name: Check for issues
        run: |
         export CI_PROJECT_DIR=$GITHUB_WORKSPACE
         ./scripts/kw-check-issues.sh

      - name: Generate report
        run: |
         export CI_PROJECT_DIR=$GITHUB_WORKSPACE
         export CI_PROJECT_URL=$GITHUB_REPOSITORY
         export CI_COMMIT_SHA=$GITHUB_SHA
         ./scripts/kw-gen-report.sh
         ./scripts/store-files.sh $GITHUB_REPOSITORY $GITHUB_RUN_ID klocwork "klocwork/report.log"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}_artifact
          path: klocwork/*