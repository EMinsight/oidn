on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
      cmd:
        required: true
        type: string
      artifact-name:
        required: false
        type: string
      runs-on:
        required: false
        type: string
        default: '[ "Linux", "docker", "build" ]'

jobs:
  build-linux:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    container:
      image: amr-registry.caas.intel.com/renderkit/${{ inputs.docker-image }}
      options: --user root
      # Need NAS to access ICC compiler
      volumes:
        - /NAS:/NAS

    env:
      # NAS ICC is needed for linux (TODO - install it inside docker image)
      OIDN_ICC_DIR_LINUX: /NAS/packages/apps/intel/2020.1/bin

    steps:
      # We need to checkout code first to get access to repo actions
      # used in next step.
      - uses: actions/checkout@v3
      # Custom action to WA submodules problem with OIDN
      - name: Checkout OIDN src code with submodules
        uses: ./.github/actions/checkout
        with:
          pat: ${{ secrets.PAT_TOKEN }}

      - name: Execute build command
        shell: bash
        run: ${{ inputs.cmd }}

      - name: Compress artifact files
        if: ${{ inputs.artifact-name }}
        run: |
         tar -zcvf build.tar.gz ./build
         tar -zcvf deps.tar.gz ./deps

      - name: Upload artifact
        if: ${{ inputs.artifact-name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: |
            build.tar.gz
            deps.tar.gz